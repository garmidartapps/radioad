{"filter":false,"title":"Immediate (Debugger)","tooltip":"Immediate (Debugger)","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Welcome to the debugger inspector. You can inspect any process that the debugger is attached to. Code ","will be executed in the global context unless on a breakpoint, then code is executed in the current frame.",""]}]}]]},"immediate":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":0},"end":{"row":2,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0,"type":"jsbrowser","history":["d2","htmls","Date.now()","Date.now().getHours()","Date.now().getHours","Date.now().getHours()","new Date.now()","Date.now()","rest.getXML(options,function(statusCode, result)\n        {\n            // I could work with the result html/json here.  I could also just return it\n            console.log(\"onResult: (\" + statusCode + \")\" + result);\n        }); ","rest.getXML(options,function(statusCode, result)\n        {\n            // I could work with the result html/json here.  I could also just return it\n            console.log(\"onResult: (\" + statusCode + \")\" + result);\n        }); )","var rest = require('./xmlhttprequest');","yql","echo yql","console.log(yql)","yql"],"pos":-1},"timestamp":1407252582410,"hash":"b2139f378f939e93ffd3e81d66f1ce52d5da5c5a"}